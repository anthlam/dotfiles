#! /usr/bin/env bash

# ----- Helpful functions -----

# Display colors
function colortest() {
  for i in {0..255}; do
    echo " $i:  $(tput setaf $i)This is a test$(tput sgr0) $(tput setab $i)This is a test$(tput sgr0)";
  done;
}

# Diff of TTM feature flags
function ffdiff() {
  ~/Projects/TTM/apangea/script/sync_feature_flags.rb --from $1 --to $2 --list
}

# Sync TTM feature flags
function ffsync() {
  ~/Projects/TTM/apangea/script/sync_feature_flags.rb --from $1 --to $2
}

# Run apangea integration tests
function itesta() {
  rake db:test:prepare
  RAILS_ENV=test rake servers:start

  if [ -z "$@" ]; then
    bundle exec rake
  else
    bundle exec rake test TEST=$@
  fi

  RAILS_ENV=test rake servers:stop
}

# Print PATH in easier to read format
function mypath() {
  echo -e ${PATH//:/\\n}
}

# Grep for a process
function psg() {
  ps aux | grep $@
}

# Rails Console shortcut
function rc() {
if [ -z "$@" ]; then
  rails c
else
  ttmscalr rails_c -f $@
fi
}

# Test TTM Branch
# Get local live teaching ready
function setuplt() {
  git pull
  bundle install
  npm install
  grunt install
  grunt build
}

# Must be run from a TTM repo
# Checks out rc, resets to origin/rc, pulls latest rc, pulls branch and merges into rc
function tb() {
  git checkout rc
  git reset --hard origin/rc
  git pull
  git pull --no-ff --no-edit origin $@
}

# ttmscalr config shortcut
function ttmcfg() {
  ttmscalr config -f $@
} 

# ttmscalr ssh shortcut
function ttmssh() {
  ttmscalr ssh debug.1 -f $@
}

# Migrate apangea data to warehouse
# Must be run from TTM reporting repo
function wad() {
  rake etl:incremental
  rake etl:truncate_weekly_aggregates
  rake etl:aggregate
  rake etl:aggregate_weekly
  rake etl:rebuild_standards
}
