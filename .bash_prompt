#! /usr/bin/env bash

# README
# A prompt builder hacked together from a bunch of samples out there
# Thank you bash-it and those whose themes I partially boosted
# Requires a terminal that supports 256 colors
# Requires a Powerline-patched font

# TODO
# 1. Should make a color change function that takes the color code or name

PROMPT=""
PROMPT_SEPERATOR='|'
PROMPT_ERROR='✘'
PROMPT_ROOT='⚡'
PROMPT_JOBS='⚙'
GIT_BRANCH=''
GIT_STAGED='●'
GIT_UNSTAGED='Δ'
GIT_UNTRACKED='✚'

BLACK=$(tput setaf 0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)
PINK=$(tput setaf 201)
BOLD=$(tput bold)
RESET=$(tput sgr0)

# Build git file changes portion on dirty git repos
parse_git_dirty() {
  local status=$(git status -b --porcelain 2> /dev/null || git status --porcelain 2> /dev/null)

  if [[ -n "${status}" ]]; then
    local untracked_count="$(egrep -c '^\?\? .+' <<< "${status}")"
    local unstaged_count="$(egrep -c '^.[^ ?#] .+' <<< "${status}")"
    local staged_count="$(egrep -c '^[^ ?#]. .+' <<< "${status}")"

    [[ "${staged_count}" -gt 0 ]] && details+=" ${RESET}${GREEN}${GIT_STAGED}${staged_count}"
    [[ "${unstaged_count}" -gt 0 ]] && details+=" ${RESET}${YELLOW}${GIT_UNSTAGED}${unstaged_count}"
    [[ "${untracked_count}" -gt 0 ]] && details+=" ${RESET}${RED}${GIT_UNTRACKED}${untracked_count}"
  fi

  [[ -n "${details}" ]] && echo -n "${details}"
}

# Get the current git branch
parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# Put current time in 12 hour format at beginning of prompt
prompt_time() {
  echo -n "${RESET}${PINK}\T"
}
# Build context portion of the prompt
prompt_context() {
  if [[ -n ${SSH_CLIENT} ]]; then
    echo -n " ${RESET}${BOLD}${CYAN}[\u${RESET}${WHITE}@${CYAN}\h]"
  else
    echo -n " ${RESET}${BOLD}${CYAN}[\u]"
  fi
}

# Build the directory portion of the prompt
prompt_dir() {
  echo -n " ${RESET}${BOLD}${BLUE}\w"
}

prompt_branch_icon() {
  if [[ -n "$(git branch --no-color 2> /dev/null)" ]]; then
    echo -n " ${RESET}${MAGENTA}${GIT_BRANCH}"
  fi
}

# Build the git repo portion of the prompt
prompt_git() {
  echo -n " \$(prompt_branch_icon)\$(parse_git_branch)"
}

# End the prompt
prompt_end(){
  echo -n "${RESET}\n\$ "
}

build_prompt() {
  prompt_time
  prompt_context
  prompt_dir
  prompt_git
  prompt_end
}

export PS1="${RESET}$(build_prompt)"
export PS2="${CYAN}→ ${RESET}"
